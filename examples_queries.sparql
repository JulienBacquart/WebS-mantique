PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX ex: <http://example.org/>
PREFIX schema: <http://schema.org/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbpage:  <http://dbpedia.org/page/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Medal won by a member of the IOC Refugee Olympic Team
SELECT ?name ?medal_type ?name_event WHERE {
	?delegation rdf:type ex:delegation ;
             schema:name "IOC Refugee Olympic Team at the 2024 Summer Olympics" .
  	?medalist rdf:type foaf:Person ;
      		foaf:name ?name ;
        	ex:delegation ?delegation ;
  			ex:won_medal ?medal .
  	?medal ex:medal_type ?medal_type ;
         ex:won_at/schema:name ?name_event .
}

# Medalists with the most medal
SELECT ?name_medalist (COUNT(?medal) AS ?nb_medal) WHERE {
	?medal rdf:type ex:medal ;
        ex:medal_type ?medal_type .
    ?medalist ex:won_medal ?medal ;
              foaf:name ?name_medalist .
} GROUP BY ?medalist ?name_medalist
ORDER BY DESC(?nb_medal)
LIMIT 25

# Medalists with the most medal, with details of the number of gold, silver and bronze medals
SELECT ?medalist_name 
    (STR(COUNT(?medal_type)) AS ?total_medals)	# Use STR() to hide the ^^<http://www.w3.org/2001/XMLSchema#integer>
	(STR(SUM(IF(?medal_type = "gold", 1, 0))) AS ?nb_gold)  # type annotation in the result
	(STR(SUM(IF(?medal_type = "silver", 1, 0))) AS ?nb_silver)
	(STR(SUM(IF(?medal_type = "bronze", 1, 0))) AS ?nb_bronze)
WHERE {
  ?medalist foaf:name ?medalist_name ;
            ex:won_medal ?medal .
  ?medal ex:medal_type ?medal_type .
}
GROUP BY ?medalist_name
ORDER BY DESC(?total_medals) DESC(?nb_gold) DESC(?nb_silver) DESC(?nb_bronze)
LIMIT 10

# Total number of medals per country
SELECT ?country_name (COUNT(?medal) AS ?nb_medal) WHERE {
	?medal rdf:type ex:medal ;
        ex:medal_type ?medal_type .
    ?medalist ex:won_medal ?medal ;
              dbo:country ?country .
  	?country schema:name ?country_name .
} GROUP BY ?country ?country_name
ORDER BY DESC(?nb_medal)
LIMIT 25

# Total number of medals per country, with details of the number of gold, silver and bronze medals
SELECT ?country_name 
	(STR(?total_medals) AS ?total_medal_str)  # Use STR() to hide the ^^<http://www.w3.org/2001/XMLSchema#integer>
	(STR(?nb_gold) AS ?nb_gold_str)  
	(STR(?nb_silver) AS ?nb_silver_str)
	(STR(?nb_bronze) AS ?nb_bronze_str)
WHERE {
	SELECT ?country_name 
    	(COUNT(?medal_type) AS ?total_medals)	
    	(SUM(IF(?medal_type = "gold", 1, 0)) AS ?nb_gold)
    	(SUM(IF(?medal_type = "silver", 1, 0)) AS ?nb_silver)
    	(SUM(IF(?medal_type = "bronze", 1, 0)) AS ?nb_bronze)
	WHERE {
    	?medalist foaf:name ?medalist_name ;
              ex:won_medal ?medal ;
              dbo:country ?country .
    	?country schema:name ?country_name .
    	?medal ex:medal_type ?medal_type .
  	}
  	GROUP BY ?country_name
  	ORDER BY DESC(?total_medals) DESC(?nb_gold) DESC(?nb_silver) DESC(?nb_bronze)
  	LIMIT 10
}

# Number of medal per region, with details of the number of gold, silver and bronze medals
SELECT ?nuts2_name
	?country
	(STR(?total_medals) AS ?total_medal_str)
	(STR(?nb_gold) AS ?nb_gold_str)
	(STR(?nb_silver) AS ?nb_silver_str)
	(STR(?nb_bronze) AS ?nb_bronze_str)
WHERE {
	SELECT ?nuts2_name
		?country
        (COUNT(?medal_type) AS ?total_medals)	
        (SUM(IF(?medal_type = "gold", 1, 0)) AS ?nb_gold)
        (SUM(IF(?medal_type = "silver", 1, 0)) AS ?nb_silver)
        (SUM(IF(?medal_type = "bronze", 1, 0)) AS ?nb_bronze)
	WHERE {
     	?medal rdf:type ex:medal ;
      		ex:medal_type ?medal_type .
      	?medalist ex:won_medal ?medal ;
      		dbo:birthPlace ?birth_place .
      	?birth_place ex:nuts2_id ?nuts2_id ;
      		ex:nuts2_name ?nuts2_name ;
          	ex:nuts0_name ?country .
  	} 
  	GROUP BY ?nuts2_id ?nuts2_name ?country ?nuts2_population ?nuts2_gdp
  	ORDER BY DESC(?total_medals) DESC(?nb_gold) DESC(?nb_silver) DESC(?nb_bronze)
	LIMIT 5
}

# Regions, ordered by medals per millions of residents
SELECT ?nuts2_name
	?country
	(STR(?total_medals) AS ?total_medal_str)
	(STR(?nuts2_population_in_million) AS ?nuts2_population_in_million_str)
	(STR(?medals_per_million_residents) AS ?medals_per_million_residents_str)
WHERE {
	SELECT ?nuts2_name
		?country
		(COUNT(?medal) AS ?total_medals)	
		(ROUND((?nuts2_population * 1000) / 1000000) / 1000 AS ?nuts2_population_in_million)
  		(ROUND((?total_medals / ?nuts2_population) * 1000000 * 100) / 100 AS ?medals_per_million_residents)
	WHERE {
		?medal rdf:type ex:medal .
		?medalist ex:won_medal ?medal ;
      		dbo:birthPlace ?birth_place .
      	?birth_place ex:nuts2_id ?nuts2_id ;
      		ex:nuts2_name ?nuts2_name ;
        	ex:nuts2_population ?nuts2_population ;
          	ex:nuts0_name ?country .
  	} 
  	GROUP BY ?nuts2_id ?nuts2_name ?country ?nuts2_population
	ORDER BY DESC(?medals_per_million_residents)
  	LIMIT 10
}

# Regions, ordered by medals per millions euros of GDP
SELECT ?nuts2_name
	?country
	(STR(?total_medals) AS ?total_medal_str)
	(STR(?nuts2_gdp_in_mio_euros) AS ?nuts2_gdp_in_mio_euros_str)
	(STR(?medals_per_mio_euros_gdp) AS ?medals_per_mio_euros_gdp_str)
WHERE {
	SELECT ?nuts2_name
		?country
		(COUNT(?medal) AS ?total_medals)
	    (?nuts2_gdp AS ?nuts2_gdp_in_mio_euros)
  		((?total_medals / ?nuts2_gdp_in_mio_euros) AS ?medals_per_mio_euros_gdp)
	WHERE {
		?medal rdf:type ex:medal .
		?medalist ex:won_medal ?medal ;
      		dbo:birthPlace ?birth_place .
      	?birth_place ex:nuts2_id ?nuts2_id ;
      		ex:nuts2_name ?nuts2_name ;
        	ex:nuts2_gdp ?nuts2_gdp ;
          	ex:nuts0_name ?country .
  	} 
  	GROUP BY ?nuts2_id ?nuts2_name ?country ?nuts2_gdp
	ORDER BY DESC(?medals_per_mio_euros_gdp)
  	LIMIT 10
}

PREFIX ns1: <http://www.powermap.org/ontology#>
PREFIX ns2: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX ns3: <http://schema.org/>
PREFIX ns4: <http://www.dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

## Federated Queries 
### /!\ Need to create local dataset in Fueski for each turtle file 

# Number of medals and nuclear powerplant per country
SELECT ?country_name 
	(STR(?nb_medal) AS ?nb_medal_)  # Use STR() to hide the ^^<http://www.w3.org/2001/XMLSchema#integer>
	(STR(?nb_powerplants) AS ?nb_nuclear_powerplants_)
#SELECT  ?country_name ?nb_medal ?nb_powerplants
WHERE {
    SERVICE <http://localhost:3030/powerplants/query> {
        SELECT DISTINCT ?country_powerplant (COUNT(?powerplant) AS ?nb_powerplants) 
        WHERE {
            ?powerplant ns4:country ?country_powerplant ;
                        <https://fuseki.nishyda.tech/ontology#energySource> "Nuclear" .
        } GROUP BY ?country_powerplant
        ORDER BY DESC(?nb_powerplants)
        LIMIT 6
    }
    SERVICE <https://dbpedia.org/sparql> {
        SELECT ?country_powerplant ?wikidata_entity WHERE {
            # /!\ United_States != United_States_of_America, we need to follow the page redirect if it exists
            ?country_powerplant <http://dbpedia.org/ontology/wikiPageRedirects>?/owl:sameAs ?wikidata_entity .
            FILTER (strstarts(str(?wikidata_entity), 'http://www.wikidata.org/entity/'))
        }
    }
    SERVICE <http://localhost:3030/2024_medalists_all/query> {
        SELECT ?wikidata_entity ?country_name (COUNT(?medal) AS ?nb_medal) WHERE {
            ?medal rdf:type ex:medal .
            ?medalist ex:won_medal ?medal ;
                        dbo:country ?wikidata_entity .
            ?wikidata_entity schema:name ?country_name .
        } GROUP BY ?wikidata_entity ?country_name
        ORDER BY DESC(?nb_medal)
    }
}

# Add pollution
SELECT ?country_name
	(STR(?nb_medal) AS ?nb_medal_)  # Use STR() to hide the ^^<http://www.w3.org/2001/XMLSchema#integer>
	(STR(?nb_powerplants) AS ?nb_nuclear_powerplants_)
	(STR(?avg_moy_emission) AS ?avg_moy_emission_)
#SELECT  ?country_name ?nb_medal ?nb_powerplants
WHERE {
    SERVICE <http://localhost:3030/powerplants/query> {
        SELECT DISTINCT ?country_powerplant (COUNT(?powerplant) AS ?nb_powerplants) 
        WHERE {
            ?powerplant ns4:country ?country_powerplant ;
                        <https://fuseki.nishyda.tech/ontology#energySource> "Nuclear" .
        } GROUP BY ?country_powerplant
        ORDER BY DESC(?nb_powerplants)
        LIMIT 6
    }
    SERVICE <https://dbpedia.org/sparql> {
        SELECT ?country_powerplant ?wikidata_entity WHERE {
            # /!\ United_States != United_States_of_America, we need to follow the page redirect if it exists
            ?country_powerplant <http://dbpedia.org/ontology/wikiPageRedirects>?/owl:sameAs ?wikidata_entity .
            FILTER (strstarts(str(?wikidata_entity), 'http://www.wikidata.org/entity/'))
        }
    }
    SERVICE <http://localhost:3030/2024_medalists_all/query> {
        SELECT ?wikidata_entity ?country_name (COUNT(?medal) AS ?nb_medal) WHERE {
            ?medal rdf:type ex:medal .
            ?medalist ex:won_medal ?medal ;
                        dbo:country ?wikidata_entity .
            ?wikidata_entity schema:name ?country_name .
        } GROUP BY ?wikidata_entity ?country_name
        ORDER BY DESC(?nb_medal)
    }
    OPTIONAL {
        SERVICE <http://localhost:3030/global_air_pollution_dataset/query> {
            SELECT ?country_powerplant (ROUND(AVG(?moyEmission) * 100) / 100 AS ?avg_moy_emission) WHERE {
                ?city rdf:type dbo:city ;
                    dbo:country ?country_powerplant ;
                    <http://exemple.org/#hasMoyEmission> ?moyEmission .
                ?country_powerplant rdf:type dbo:country .
            } GROUP BY ?country_powerplant
        }
  	}
}

# Mega query!!!
SELECT DISTINCT ?country_name
	?country_code
	(STR(?nb_medal) AS ?nb_medal_)  # Use STR() to hide the ^^<http://www.w3.org/2001/XMLSchema#integer>
	(STR(?nb_powerplants) AS ?nb_nuclear_powerplants_)
	(STR(?education_rank) AS ?education_rank_)
	(STR(?avg_moy_emission) AS ?avg_moy_emission_)
#SELECT  ?country_name ?nb_medal ?nb_powerplants
WHERE {
    SERVICE <http://localhost:3030/powerplants/query> {
        SELECT DISTINCT ?country_powerplant (COUNT(?powerplant) AS ?nb_powerplants) 
    	WHERE {
            ?powerplant ns4:country ?country_powerplant ;
                    <https://fuseki.nishyda.tech/ontology#energySource> "Nuclear" .
          	} GROUP BY ?country_powerplant
    		ORDER BY DESC(?nb_powerplants)
    		LIMIT 6
        }
        SERVICE <https://dbpedia.org/sparql> {
            SELECT ?country_powerplant ?wikidata_entity WHERE {
      	        # /!\ United_States != United_States_of_America, we need to follow the page redirect if it exists
                ?country_powerplant <http://dbpedia.org/ontology/wikiPageRedirects>?/owl:sameAs ?wikidata_entity .
                FILTER (strstarts(str(?wikidata_entity), 'http://www.wikidata.org/entity/'))
            }
        }
		SERVICE <http://localhost:3030/2024_medalists_all/query> {
            SELECT ?wikidata_entity ?country_name ?country_code (COUNT(?medal) AS ?nb_medal) WHERE {
                ?medal rdf:type ex:medal .
                ?medalist ex:won_medal ?medal ;
                          dbo:country ?wikidata_entity .
                ?wikidata_entity schema:name ?country_name ;
                                 dbpage:ISO_3166-1_alpha-3 ?country_code .
      		} GROUP BY ?wikidata_entity ?country_name ?country_code
    		ORDER BY DESC(?nb_medal)
        }
		OPTIONAL {
    		SERVICE <http://localhost:3030/global_air_pollution_dataset/query> {
      			SELECT ?country_powerplant (ROUND(AVG(?moyEmission) * 100) / 100 AS ?avg_moy_emission) WHERE {
                	?city rdf:type dbo:city ;
                		dbo:country ?country_powerplant ;
                    	<http://exemple.org/#hasMoyEmission> ?moyEmission .
            		?country_powerplant rdf:type dbo:country .
            	} GROUP BY ?country_powerplant
          	}
  		}
  		SERVICE <http://localhost:3030/global_prosperity_regions_politics/query> {
    	SELECT ?country_code ?education_rank WHERE {
      			?country dbo:Countryname ?country_education ;
      				<http://www.ics.forth.gr/isl/oae/core#scoreeducation> ?education_rank ;
        			<http://www.geonames.org/ontology#countryCodecode> ?country_code
     	}
  	}
}

# nom des athlètes des Pays de la Loire avec leur sport 
SELECT ?name ?medal ?sport WHERE {
	?bp ex:nuts1_name "Pays de la Loire".
	?m ex:medal_type ?medal.
	?p dbo:birthPlace ?bp;
		ex:won_medal ?m:
		dbo:sport ?sport;
		foaf:name ?name.
}

# top 5 des pays avec le nb de milliardaires, 
SELECT ?pays ?medailles ?sante ?education ?economie ?milliardaires 
WHERE {
 	{
	SERVICE <http://localhost:3030/jo2024/query>{
			SELECT ?pays (COUNT(?medal) AS ?medailles) WHERE {
				?medal rdf:type ex:medal.
				?medalist ex:won_medal ?medal;
						dbo:country ?p.
				?p schema:name ?pays.
			} GROUP BY ?pays
		} ORDER BY DESC(?medailles)
	}
	OPTIONAL 
	{
		SERVICE <http://localhost:3030/prosperity/query>{
			SELECT ?pays ?sante ?education ?economie WHERE {
				?x owl1:name ?pays;
					score:health ?sante;
					score:education ?education;
					score:economic_quality ?economie.
			}
		}
		SERVICE <http://localhost:3030/billionaires/query>{
 			SELECT ?pays (COUNT(?x) AS ?milliardaires) WHERE {
				BIND(IRI(CONCAT("http://dbpedia.org/resource/" , STR(?pays))) AS ?uriPays).
				?x dbo:location ?uriPays.
			} GROUP BY ?pays
		}	
	}
} ORDER BY DESC(?medailles)
LIMIT 5
